<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_ama_portal.AMAUtils</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>AMAUtils</name>
        <script><![CDATA[var AMAUtils = Class.create();
AMAUtils.prototype = {
	initialize: function() {
		this.event_table = "x_snc_ama_portal_event";
		this.question_table = "x_snc_ama_portal_question";
		this.vote_table = "x_snc_ama_portal_vote";
		this.comment_table = "x_snc_ama_portal_comment";
	},
	
	
	getEventPageName: function(event) {
		if (!event)
			return "Select Event";
		var e = new GlideRecord(this.event_table);
		if (!e.get(event))
			return "";
		return e.getDisplayValue("title");
	},
	
	_buildEventObject: function(event, include_description) {
		var returnObj = {
			name: event.getDisplayValue(),
			date: event.getDisplayValue("when"),
			type: "event",
			id: event.getUniqueValue(),
			locked: event.locked.toString(),
			active: event.active.toString(),
			href: "?event=" + event.getUniqueValue()
		};
		if(include_description) {
			returnObj.description = event.getValue('event_description');
		}
		return returnObj;
	},
	
	_buildQuestionObject: function(question) {
		var voteData = this.getVoteDataForQuestion(question.getUniqueValue());
		var user_id = question.getValue("sys_created_by");
		var user_id_from_email = false;
		if (user_id.indexOf('@') != -1) {
			user_id_from_email = true;
		}
		
		return {
			name: question.getDisplayValue(),
			created: question.getDisplayValue("sys_created_on"),
			type: "question",
			user: (user_id_from_email) ? user_id.substring(0, user_id.indexOf('@')) : question.getValue("sys_created_by"),
			id: question.getUniqueValue(),
			score: voteData.score,
			up: voteData.up,
			down: voteData.down,
			comments: this._getCommentsArray(question.getUniqueValue())
		};
	},
	
	_getCommentsArray: function(question) {
		var comments = [];
		var comment = new GlideRecord(this.comment_table);
		comment.addQuery("question", question);
		comment.query();
		while (comment.next()) {
			var user_id = comment.getValue("sys_created_by");
			var user_id_from_email = false;
			if (user_id.indexOf('@') != -1) {
				user_id_from_email = true;
			}
			
			comments.push({
				comment: comment.getValue("comment"),
				when: comment.getDisplayValue("sys_created_on"),
				by: (user_id_from_email) ? user_id.substring(0, user_id.indexOf('@')) : comment.getValue("sys_created_by"),
				id: comment.getDisplayValue()
			});
		}
		return comments;
	},
	
	_getUser: function(username) {
		if (!username) {
			return false;
		} else {
			var usrGR = new GlideRecord("sys_user");
			usrGR.addQuery("user_name", username);
			usrGR.addQuery("active", true);
			usrGR.query();
			
			if (usrGR.hasNext()) {
				while (usrGR.next()) {
					return usrGR;
				}
			} else {
				return false;
			}
		}
	},
	
	getEventList: function() {
		var events = [];
		//Instantiate a new GlideRecord object on the Event table
		var event = new GlideRecord(this.event_table);
		//Filter out inactive Events
		event.addActiveQuery();
		event.query();
		while (event.next()) {
			//Helper function that populates an object with the data for this Event.
			events.push(this._buildEventObject(event));
		}
		//Return the array containing the fully populated Event objects
		return events;
	},
	
	type: 'AMAUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-23 04:04:00</sys_created_on>
        <sys_id>c39d40c6db1d230098c535a27a9619d8</sys_id>
        <sys_mod_count>78</sys_mod_count>
        <sys_name>AMAUtils</sys_name>
        <sys_package display_value="Ask Me Anything Portal" source="x_snc_ama_portal">b3bab771dbd9230098c535a27a961968</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Ask Me Anything Portal">b3bab771dbd9230098c535a27a961968</sys_scope>
        <sys_update_name>sys_script_include_c39d40c6db1d230098c535a27a9619d8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-08 23:08:21</sys_updated_on>
    </sys_script_include>
</record_update>
